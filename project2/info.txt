

#=====[ pyOpenSSL Documenation ]=====

http://www.pyopenssl.org/en/latest/index.html


#=====[ OpenSSL Example use cases ]=====

https://github.com/msabramo/pyOpenSSL/blob/master/examples/certgen.py



#=====[ Required functionality [options] ]=====

-1, --tlsv1
              (SSL) Forces curl to use TLS version 1.x when negotiating with a remote TLS server.  You can use options --tlsv1.0, --tlsv1.1, and --tlsv1.2 to con-
              trol the TLS version more precisely (if the SSL backend in use supports such a level of control).

--ciphers <list of ciphers>
      (SSL) Specifies which ciphers to use in the connection. The list of ciphers must specify valid ciphers. Read up on SSL cipher list details  on  this
      URL: https://www.openssl.org/docs/apps/ciphers.html

      NSS ciphers are done differently than OpenSSL and GnuTLS. The full list of NSS ciphers is in the NSSCipherSuite entry at this URL: https://git.fedo-
      rahosted.org/cgit/mod_nss.git/plain/docs/mod_nss.html#Directives

      If this option is used several times, the last one will be used.


--crlfile <file>
          (HTTPS/FTPS)  Provide  a  file  using  PEM  format  with  a Certificate Revocation List that may specify peer certificates that are to be considered revoked.

          If this option is used several times, the last one will be used.

          (Added in 7.19.7)

--cacert <CA certificate>
              (SSL) Tells curl to use the specified certificate file to verify the peer. The file may contain multiple CA certificates. The certificate(s) must be
              in PEM format. Normally curl is built to use a default file for this, so this option is typically used to alter that default file.

              curl  recognizes  the  environment  variable named 'CURL_CA_BUNDLE' if it is set, and uses the given path as a path to a CA cert bundle. This option
              overrides that variable.

              The windows version of curl will automatically look for a CA certs file named 'curl-ca-bundle.crt', either in the same directory as curl.exe, or  in
              the Current Working Directory, or in any folder along your PATH.

              If curl is built against the NSS SSL library, the NSS PEM PKCS#11 module (libnsspem.so) needs to be available for this option to work properly.

              If this option is used several times, the last one will be used.


--allow-stale-certs N. This option does not exist in curl but you will implement it in
			scurl. When a user invokes scurl with this option with an argument N, your implementation
			should accept a certificate C as valid if (a) C is an otherwise valid certificate that has expired
			and (b) C expired within the past N days. The argument N to this option must be a nonnegative
			integer. If this option is used several times, the last one will be used.

